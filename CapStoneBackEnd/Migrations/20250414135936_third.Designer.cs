// <auto-generated />
using System;
using CapStoneBackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapStoneBackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250414135936_third")]
    partial class third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "66D7DB2A-56A6-4E65-90A2-26A33701C613",
                            ConcurrencyStamp = "66D7DB2A-56A6-4E65-90A2-26A33701C613",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "6DD52BC5-AC79-4A54-B6CD-302475F6E068",
                            ConcurrencyStamp = "6DD52BC5-AC79-4A54-B6CD-302475F6E068",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Cart", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 8,
                            Name = "SoulsLike"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Multiplayer"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 16,
                            Name = "MMO"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sandbox"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Open World"
                        });
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdGame")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PublishedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("IdGame");

                    b.HasIndex("IdUser");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f48f2269-1189-4169-9bda-43740ac61d54"),
                            Name = "CD Projekt Red"
                        },
                        new
                        {
                            Id = new Guid("edd26752-909e-49f2-825b-474b9634ca08"),
                            Name = "Rockstar Games"
                        },
                        new
                        {
                            Id = new Guid("decc0abf-32ac-4dab-bfe8-912f7476aed2"),
                            Name = "FromSoftware"
                        },
                        new
                        {
                            Id = new Guid("806edb38-e6a2-44d7-9ba2-66c5524985d4"),
                            Name = "Mojang"
                        },
                        new
                        {
                            Id = new Guid("4bee146c-b7e7-450c-80f1-bd25f0489af7"),
                            Name = "Naughty Dog"
                        },
                        new
                        {
                            Id = new Guid("94814951-9711-4038-8a62-b7a08796ce97"),
                            Name = "Bethesda"
                        },
                        new
                        {
                            Id = new Guid("54e0a08e-b04c-42d0-9581-9492b2339c7e"),
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = new Guid("4415db24-c5b4-464a-ab3f-4a0844174dbc"),
                            Name = "Activision Blizzard"
                        },
                        new
                        {
                            Id = new Guid("3bffcf4b-1e3a-400d-989d-6a6207701937"),
                            Name = "NetEase Games"
                        },
                        new
                        {
                            Id = new Guid("68d14478-608c-48e7-be0d-5ad1ed21f520"),
                            Name = "Electronic Arts"
                        },
                        new
                        {
                            Id = new Guid("14cfc957-2ed2-4a7c-89ed-e132fee0fc1f"),
                            Name = "Capcom"
                        },
                        new
                        {
                            Id = new Guid("3ed716be-3c54-44cf-b2fa-757301edfdf4"),
                            Name = "Square Enix"
                        },
                        new
                        {
                            Id = new Guid("3e7a5105-e3c8-4179-a72b-6c16c9f46a44"),
                            Name = "Bandai Namco"
                        });
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.ExtraImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("ExtraImages");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.GameCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GameCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("0c462717-8f0b-4b03-af2b-73af06d1daab")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("0c462717-8f0b-4b03-af2b-73af06d1daab")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("0c462717-8f0b-4b03-af2b-73af06d1daab")
                        },
                        new
                        {
                            CategoryId = 2,
                            GameId = new Guid("74a82095-c501-4c95-a085-c833119924d9")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("74a82095-c501-4c95-a085-c833119924d9")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("74a82095-c501-4c95-a085-c833119924d9")
                        },
                        new
                        {
                            CategoryId = 15,
                            GameId = new Guid("74a82095-c501-4c95-a085-c833119924d9")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("b30f1ee8-923a-4137-9219-a5b0e662234c")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("b30f1ee8-923a-4137-9219-a5b0e662234c")
                        },
                        new
                        {
                            CategoryId = 8,
                            GameId = new Guid("b30f1ee8-923a-4137-9219-a5b0e662234c")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("b30f1ee8-923a-4137-9219-a5b0e662234c")
                        },
                        new
                        {
                            CategoryId = 17,
                            GameId = new Guid("4943a4ab-77dc-4b5b-9e28-8624aedf14de")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("4943a4ab-77dc-4b5b-9e28-8624aedf14de")
                        },
                        new
                        {
                            CategoryId = 15,
                            GameId = new Guid("4943a4ab-77dc-4b5b-9e28-8624aedf14de")
                        },
                        new
                        {
                            CategoryId = 15,
                            GameId = new Guid("68998e4c-c5c9-49d6-a88b-387b9d25fb64")
                        },
                        new
                        {
                            CategoryId = 9,
                            GameId = new Guid("68998e4c-c5c9-49d6-a88b-387b9d25fb64")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("68998e4c-c5c9-49d6-a88b-387b9d25fb64")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("c7e65512-f05f-4f70-83b4-8a15b2db342f")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("c7e65512-f05f-4f70-83b4-8a15b2db342f")
                        },
                        new
                        {
                            CategoryId = 8,
                            GameId = new Guid("c7e65512-f05f-4f70-83b4-8a15b2db342f")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("4b283381-040c-4bc2-a8ba-d68ccdef5ef8")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("4b283381-040c-4bc2-a8ba-d68ccdef5ef8")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("4b283381-040c-4bc2-a8ba-d68ccdef5ef8")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("e32a9ac5-ac0a-4a76-92b8-a689c863b679")
                        },
                        new
                        {
                            CategoryId = 12,
                            GameId = new Guid("e32a9ac5-ac0a-4a76-92b8-a689c863b679")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("e32a9ac5-ac0a-4a76-92b8-a689c863b679")
                        },
                        new
                        {
                            CategoryId = 4,
                            GameId = new Guid("c56fcfe3-3983-4156-a1fe-68d042ec528c")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("c56fcfe3-3983-4156-a1fe-68d042ec528c")
                        },
                        new
                        {
                            CategoryId = 5,
                            GameId = new Guid("667dc63f-5dcd-47f0-8913-77bfac892b31")
                        },
                        new
                        {
                            CategoryId = 6,
                            GameId = new Guid("667dc63f-5dcd-47f0-8913-77bfac892b31")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("667dc63f-5dcd-47f0-8913-77bfac892b31")
                        },
                        new
                        {
                            CategoryId = 11,
                            GameId = new Guid("3ec73a5c-a14c-4403-a916-ac49c9d1f0e5")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("3ec73a5c-a14c-4403-a916-ac49c9d1f0e5")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("6a4e55e7-1606-461e-b6e7-9e1548c4c304")
                        },
                        new
                        {
                            CategoryId = 2,
                            GameId = new Guid("6a4e55e7-1606-461e-b6e7-9e1548c4c304")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("6a4e55e7-1606-461e-b6e7-9e1548c4c304")
                        },
                        new
                        {
                            CategoryId = 11,
                            GameId = new Guid("312733b8-23e9-4282-a468-fe204f83f10d")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("312733b8-23e9-4282-a468-fe204f83f10d")
                        },
                        new
                        {
                            CategoryId = 4,
                            GameId = new Guid("3d85ca22-cf31-4c24-84c2-21cb5f23827f")
                        },
                        new
                        {
                            CategoryId = 12,
                            GameId = new Guid("3d85ca22-cf31-4c24-84c2-21cb5f23827f")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("3d85ca22-cf31-4c24-84c2-21cb5f23827f")
                        },
                        new
                        {
                            CategoryId = 6,
                            GameId = new Guid("2dbac8da-74ba-40e1-942a-544da7d20ec4")
                        },
                        new
                        {
                            CategoryId = 7,
                            GameId = new Guid("2dbac8da-74ba-40e1-942a-544da7d20ec4")
                        },
                        new
                        {
                            CategoryId = 5,
                            GameId = new Guid("2dbac8da-74ba-40e1-942a-544da7d20ec4")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("efa61b60-449e-47a8-969f-ac2bbeb713ad")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("efa61b60-449e-47a8-969f-ac2bbeb713ad")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("efa61b60-449e-47a8-969f-ac2bbeb713ad")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("c789e653-bdd3-4dae-bde0-888ba4f25a5a")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("c789e653-bdd3-4dae-bde0-888ba4f25a5a")
                        },
                        new
                        {
                            CategoryId = 8,
                            GameId = new Guid("c789e653-bdd3-4dae-bde0-888ba4f25a5a")
                        },
                        new
                        {
                            CategoryId = 9,
                            GameId = new Guid("c789e653-bdd3-4dae-bde0-888ba4f25a5a")
                        },
                        new
                        {
                            CategoryId = 1,
                            GameId = new Guid("8f167edf-3776-4382-8303-44f6171daac2")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("8f167edf-3776-4382-8303-44f6171daac2")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("8f167edf-3776-4382-8303-44f6171daac2")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("1c8fc05d-09e4-4339-8b7a-6f2d072cb646")
                        },
                        new
                        {
                            CategoryId = 12,
                            GameId = new Guid("1c8fc05d-09e4-4339-8b7a-6f2d072cb646")
                        },
                        new
                        {
                            CategoryId = 18,
                            GameId = new Guid("1c8fc05d-09e4-4339-8b7a-6f2d072cb646")
                        },
                        new
                        {
                            CategoryId = 6,
                            GameId = new Guid("d181a5e2-96d2-4c79-a1f3-54dcf202f540")
                        },
                        new
                        {
                            CategoryId = 7,
                            GameId = new Guid("d181a5e2-96d2-4c79-a1f3-54dcf202f540")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("d181a5e2-96d2-4c79-a1f3-54dcf202f540")
                        },
                        new
                        {
                            CategoryId = 4,
                            GameId = new Guid("eb8a08cb-469a-4c21-8bcf-caf12e4f7b05")
                        },
                        new
                        {
                            CategoryId = 12,
                            GameId = new Guid("eb8a08cb-469a-4c21-8bcf-caf12e4f7b05")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("eb8a08cb-469a-4c21-8bcf-caf12e4f7b05")
                        },
                        new
                        {
                            CategoryId = 3,
                            GameId = new Guid("0b21dda9-0dbc-45d0-bdac-fbb6ed9d2bdf")
                        },
                        new
                        {
                            CategoryId = 14,
                            GameId = new Guid("0b21dda9-0dbc-45d0-bdac-fbb6ed9d2bdf")
                        },
                        new
                        {
                            CategoryId = 16,
                            GameId = new Guid("0b21dda9-0dbc-45d0-bdac-fbb6ed9d2bdf")
                        });
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Library", b =>
                {
                    b.Property<Guid>("IdGame")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdGame", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.VideoGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverLarge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c462717-8f0b-4b03-af2b-73af06d1daab"),
                            CompanyId = new Guid("f48f2269-1189-4169-9bda-43740ac61d54"),
                            Cover = "https://image.api.playstation.com/vulcan/ap/rnd/202211/0711/qezXTVn1ExqBjVjR5Ipm97IK.png",
                            CoverLarge = "https://cdn-l-thewitcher.cdprojektred.com/meta/TW3NG_thumbnail_en.png",
                            Description = "Un RPG open-world ambientato in un ricco mondo fantasy pieno di mostri, magia e intrighi politici.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2015, 5, 19),
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            Id = new Guid("74a82095-c501-4c95-a085-c833119924d9"),
                            CompanyId = new Guid("edd26752-909e-49f2-825b-474b9634ca08"),
                            Cover = "https://image.api.playstation.com/cdn/UP1004/CUSA03041_00/Hpl5MtwQgOVF9vJqlfui6SDB5Jl4oBSq.png",
                            CoverLarge = "https://store-images.s-microsoft.com/image/apps.58752.13942869738016799.078aba97-2f28-440f-97b6-b852e1af307a.95fdf1a1-efd6-4938-8100-8abae91695d6?q=90&w=480&h=270",
                            Description = "Un gioco action-adventure a tema western con una storia ricca e un mondo aperto immersivo.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2018, 10, 26),
                            Title = "Red Dead Redemption 2"
                        },
                        new
                        {
                            Id = new Guid("b30f1ee8-923a-4137-9219-a5b0e662234c"),
                            CompanyId = new Guid("decc0abf-32ac-4dab-bfe8-912f7476aed2"),
                            Cover = "https://storage.googleapis.com/pod_public/1300/216712.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/img/rnd/202111/0506/hcFeWRVGHYK72uOw6Mn6f4Ms.jpg",
                            Description = "Un acclamato RPG open-world ambientato in un mondo dark fantasy creato da George R.R. Martin e Hidetaka Miyazaki.",
                            Price = 69.99m,
                            ReleaseDate = new DateOnly(2022, 2, 25),
                            Title = "Elden Ring"
                        },
                        new
                        {
                            Id = new Guid("4943a4ab-77dc-4b5b-9e28-8624aedf14de"),
                            CompanyId = new Guid("806edb38-e6a2-44d7-9ba2-66c5524985d4"),
                            Cover = "https://upload.wikimedia.org/wikinews/en/7/7a/Minecraft_game_cover.jpeg",
                            CoverLarge = "https://www.nintendo.com/eu/media/images/10_share_images/games_15/nintendo_switch_4/2x1_NSwitch_Minecraft_image1600w.jpg",
                            Description = "Un gioco sandbox che permette ai giocatori di costruire ed esplorare mondi generati proceduralmente.",
                            Price = 26.95m,
                            ReleaseDate = new DateOnly(2011, 11, 18),
                            Title = "Minecraft"
                        },
                        new
                        {
                            Id = new Guid("68998e4c-c5c9-49d6-a88b-387b9d25fb64"),
                            CompanyId = new Guid("4bee146c-b7e7-450c-80f1-bd25f0489af7"),
                            Cover = "https://upload.wikimedia.org/wikipedia/en/4/46/Video_Game_Cover_-_The_Last_of_Us.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/ap/rnd/202206/0720/0kRqUeSBIbQzz7cen3c989c6.jpg",
                            Description = "Un gioco action-adventure post-apocalittico che segue Joel ed Ellie in un mondo devastato da un'infezione mortale causata da un fungo.",
                            Price = 39.99m,
                            ReleaseDate = new DateOnly(2013, 6, 14),
                            Title = "The Last of Us"
                        },
                        new
                        {
                            Id = new Guid("c7e65512-f05f-4f70-83b4-8a15b2db342f"),
                            CompanyId = new Guid("94814951-9711-4038-8a62-b7a08796ce97"),
                            Cover = "https://images.igdb.com/igdb/image/upload/t_cover_big_2x/co1tnw.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/ap/rnd/202009/2820/h12URI7MdswtFPFHpkppNh2z.png",
                            Description = "Un acclamato RPG open-world ambientato nel mondo fantasy di Tamriel, quinto capitolo della saga The Elder Scrolls.",
                            Price = 49.99m,
                            ReleaseDate = new DateOnly(2011, 11, 11),
                            Title = "The Elder Scolls V: Skyrim"
                        },
                        new
                        {
                            Id = new Guid("4b283381-040c-4bc2-a8ba-d68ccdef5ef8"),
                            CompanyId = new Guid("54e0a08e-b04c-42d0-9581-9492b2339c7e"),
                            Cover = "https://static.posters.cz/image/1300/poster/assassin-s-creed-valhalla-standard-edition-i97796.jpg",
                            CoverLarge = "https://cdn1.epicgames.com/400347196e674de89c23cc2a7f2121db/offer/AC%20KINGDOM%20PREORDER_STANDARD%20EDITION_EPIC_Key_Art_Wide_3840x2160-3840x2160-485fe17203671386c71bde8110886c7d.jpg",
                            Description = "Un RPG action ambientato nell'Inghilterra dell'epoca vichinga, dove i giocatori controllano Eivor nel tentativo di stabilire una nuova casa per il proprio clan.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2020, 11, 10),
                            Title = "Assassin's Creed Valhalla"
                        },
                        new
                        {
                            Id = new Guid("e32a9ac5-ac0a-4a76-92b8-a689c863b679"),
                            CompanyId = new Guid("4415db24-c5b4-464a-ab3f-4a0844174dbc"),
                            Cover = "https://cdn.mobygames.com/covers/3227605-call-of-duty-warzone-xbox-one-front-cover.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/ap/rnd/202503/2819/346190abf755e3883d1353fbc8d8ccb7e1acf076f1138d6b.jpg",
                            Description = "Una modalità battle royale gratuita del franchise Call of Duty.",
                            Price = 0.00m,
                            ReleaseDate = new DateOnly(2020, 3, 10),
                            Title = "Call of Duty: Warzone"
                        },
                        new
                        {
                            Id = new Guid("c56fcfe3-3983-4156-a1fe-68d042ec528c"),
                            CompanyId = new Guid("3bffcf4b-1e3a-400d-989d-6a6207701937"),
                            Cover = "https://images.igdb.com/igdb/image/upload/t_cover_big_2x/co1sh2.jpg",
                            CoverLarge = "https://blz-contentstack-images.akamaized.net/v3/assets/bltc965041283bac56c/blt82bb2ee72a2b0baf/651ee3b3e4a8af6535bd6de3/stepintavernthumbnail.PNG",
                            Description = "Un gioco di carte digitale ambientato nell'universo di Warcraft, che presenta battaglie strategiche con le carte.",
                            Price = 0.00m,
                            ReleaseDate = new DateOnly(2014, 3, 11),
                            Title = "Hearthstone"
                        },
                        new
                        {
                            Id = new Guid("667dc63f-5dcd-47f0-8913-77bfac892b31"),
                            CompanyId = new Guid("68d14478-608c-48e7-be0d-5ad1ed21f520"),
                            Cover = "https://fifauteam.com/images/covers/fifa23/standard-cg.webp",
                            CoverLarge = "https://www.fifaultimateteam.it/wp-content/uploads/2022/07/Kylian_Mbappe_GEN5_KM_CROP_SOCIAL_1920x1080.jpg",
                            Description = "L'ultima edizione della serie FIFA, con gameplay calcistico realistico e una vasta scelta di squadre e leghe.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2022, 9, 30),
                            Title = "FIFA 23"
                        },
                        new
                        {
                            Id = new Guid("3ec73a5c-a14c-4403-a916-ac49c9d1f0e5"),
                            CompanyId = new Guid("14cfc957-2ed2-4a7c-89ed-e132fee0fc1f"),
                            Cover = "https://upload.wikimedia.org/wikipedia/en/8/80/Street_Fighter_V_box_artwork.png",
                            CoverLarge = "https://static1.squarespace.com/static/574bec3527d4bdfe229ea099/574c3700555986b356d3fd56/6098cfd865b40529aad7d5c9/1622119197367/Titolo.jpeg?format=1500w",
                            Description = "Un gioco di combattimento 2D classico con un ampio roster di personaggi e modalità competitive.",
                            Price = 29.99m,
                            ReleaseDate = new DateOnly(2016, 2, 16),
                            Title = "Street Fighter V"
                        },
                        new
                        {
                            Id = new Guid("6a4e55e7-1606-461e-b6e7-9e1548c4c304"),
                            CompanyId = new Guid("3ed716be-3c54-44cf-b2fa-757301edfdf4"),
                            Cover = "https://i.etsystatic.com/37268737/r/il/0a8bc9/4261084803/il_570xN.4261084803_jndz.jpg",
                            CoverLarge = "https://gaming-cdn.com/images/products/5913/616x353/final-fantasy-vii-remake-intergrade-pc-gioco-steam-cover.jpg?v=1736438481",
                            Description = "Un remake completo del classico Final Fantasy VII, reinventato con grafica moderna e nuove meccaniche di gioco.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2020, 4, 10),
                            Title = "Final Fantasy VII Remake"
                        },
                        new
                        {
                            Id = new Guid("312733b8-23e9-4282-a468-fe204f83f10d"),
                            CompanyId = new Guid("3e7a5105-e3c8-4179-a72b-6c16c9f46a44"),
                            Cover = "https://cdn.mobygames.com/covers/2007175-tekken-7-playstation-4-front-cover.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/img/rnd/202111/1200/u36iCgbHmBSZoHOIm3GeKmii.jpg",
                            Description = "L'ultimo capitolo della serie Tekken, con una varietà di personaggi e un sistema di combattimento profondo e competitivo.",
                            Price = 49.99m,
                            ReleaseDate = new DateOnly(2017, 6, 2),
                            Title = "Tekken 7"
                        },
                        new
                        {
                            Id = new Guid("3d85ca22-cf31-4c24-84c2-21cb5f23827f"),
                            CompanyId = new Guid("4415db24-c5b4-464a-ab3f-4a0844174dbc"),
                            Cover = "https://upload.wikimedia.org/wikipedia/en/5/51/Overwatch_cover_art.jpg",
                            CoverLarge = "https://gaming-cdn.com/images/products/2208/orig/overwatch-pc-gioco-battle-net-cover.jpg?v=1668415006",
                            Description = "Uno sparatutto multiplayer basato su squadre con una varietà di eroi unici e un gameplay frenetico.",
                            Price = 39.99m,
                            ReleaseDate = new DateOnly(2016, 5, 24),
                            Title = "Overwatch"
                        },
                        new
                        {
                            Id = new Guid("2dbac8da-74ba-40e1-942a-544da7d20ec4"),
                            CompanyId = new Guid("94814951-9711-4038-8a62-b7a08796ce97"),
                            Cover = "https://image.api.playstation.com/vulcan/ap/rnd/202202/2806/QDzid2jNv4e44kgumGXDCscF.png",
                            CoverLarge = "https://www.nerdpool.it/wp-content/uploads/2023/05/Gran-Turismo-7-copertina.jpg",
                            Description = "L'ultimo capitolo della serie di simulazione di corse realistica con una vasta scelta di auto e circuiti.",
                            Price = 69.99m,
                            ReleaseDate = new DateOnly(2022, 3, 4),
                            Title = "Gran Turismo 7"
                        },
                        new
                        {
                            Id = new Guid("efa61b60-449e-47a8-969f-ac2bbeb713ad"),
                            CompanyId = new Guid("f48f2269-1189-4169-9bda-43740ac61d54"),
                            Cover = "https://e.snmc.io/lk/p/x/787467ae05c57a6598ea00cb7ab0095d/9917184",
                            CoverLarge = "https://cdn1.epicgames.com/offer/77f2b98e2cef40c8a7437518bf420e47/EGS_Cyberpunk2077_CDPROJEKTRED_S1_03_2560x1440-359e77d3cd0a40aebf3bbc130d14c5c7",
                            Description = "Un RPG open-world ambientato in un futuro distopico, con azione ad alta tecnologia e gameplay incentrato sulla narrativa.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2020, 12, 10),
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            Id = new Guid("c789e653-bdd3-4dae-bde0-888ba4f25a5a"),
                            CompanyId = new Guid("decc0abf-32ac-4dab-bfe8-912f7476aed2"),
                            Cover = "https://image.api.playstation.com/vulcan/img/rnd/202010/2614/Sy5e8DmeKIJVjlAGraPAJYkT.png",
                            CoverLarge = "https://www.lorebloodborne.it/wp-content/uploads/2021/09/Cacciatore-Bloodborne-1024x576.jpg",
                            Description = "Un gioco action RPG che mescola combattimenti veloci e esplorazione di un mondo oscuro e gotico, pieno di mostri e segreti.",
                            Price = 49.99m,
                            ReleaseDate = new DateOnly(2015, 3, 24),
                            Title = "Bloodborne"
                        },
                        new
                        {
                            Id = new Guid("8f167edf-3776-4382-8303-44f6171daac2"),
                            CompanyId = new Guid("14cfc957-2ed2-4a7c-89ed-e132fee0fc1f"),
                            Cover = "https://i.redd.it/9p64xvod5uqd1.png",
                            CoverLarge = "https://gaming-cdn.com/images/products/7930/orig/monster-hunter-wilds-pc-gioco-steam-europe-cover.jpg?v=1741077660",
                            Description = "Un RPG action dove i giocatori cacciano creature gigantesche in un bellissimo mondo aperto.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2018, 1, 26),
                            Title = "Monster Hunter Wilds"
                        },
                        new
                        {
                            Id = new Guid("1c8fc05d-09e4-4339-8b7a-6f2d072cb646"),
                            CompanyId = new Guid("94814951-9711-4038-8a62-b7a08796ce97"),
                            Cover = "https://upload.wikimedia.org/wikipedia/en/7/70/Fallout_4_cover_art.jpg",
                            CoverLarge = "https://image.api.playstation.com/vulcan/ap/rnd/202009/2502/rB3GRFvdPmaALiGt89ysflQ4.jpg",
                            Description = "Un gioco RPG open-world ambientato in un mondo post-apocalittico dove i giocatori esplorano il deserto nucleare e affrontano bande di nemici.",
                            Price = 39.99m,
                            ReleaseDate = new DateOnly(2015, 11, 10),
                            Title = "Fallout 4"
                        },
                        new
                        {
                            Id = new Guid("d181a5e2-96d2-4c79-a1f3-54dcf202f540"),
                            CompanyId = new Guid("806edb38-e6a2-44d7-9ba2-66c5524985d4"),
                            Cover = "https://upload.wikimedia.org/wikipedia/en/8/87/Forza_Horizon_4_cover.jpg",
                            CoverLarge = "https://www.senna.com/wp-content/uploads/2018/07/Forza-Horizon-4_Small-Horizontal-Art-860x484-2.jpg",
                            Description = "Un gioco di corse open-world con un'enorme varietà di veicoli e circuiti, ambientato nel Regno Unito in una simulazione di guida altamente realistica.",
                            Price = 59.99m,
                            ReleaseDate = new DateOnly(2021, 3, 9),
                            Title = "Forza Horizon 4"
                        },
                        new
                        {
                            Id = new Guid("eb8a08cb-469a-4c21-8bcf-caf12e4f7b05"),
                            CompanyId = new Guid("3bffcf4b-1e3a-400d-989d-6a6207701937"),
                            Cover = "https://cdn.mobygames.com/covers/19465997-marvel-rivals-xbox-series-front-cover.jpg",
                            CoverLarge = "https://cdn1.epicgames.com/spt-assets/eb15454c010f4a748498cd3a62096a52/marvel-rivals-1ywtf.png",
                            Description = "Un gioco sparatutto PVP a squadre di Super Eroi! Crea una squadra di fuoriclasse Marvel con abilità di squadra uniche in arene distruttibili e in continuo cambiamento nell'universo Marvel",
                            Price = 0.00m,
                            ReleaseDate = new DateOnly(2024, 12, 6),
                            Title = "Marvel Rivals"
                        },
                        new
                        {
                            Id = new Guid("0b21dda9-0dbc-45d0-bdac-fbb6ed9d2bdf"),
                            CompanyId = new Guid("3ed716be-3c54-44cf-b2fa-757301edfdf4"),
                            Cover = "https://m.media-amazon.com/images/I/81a2m0s2P2L._AC_UF1000,1000_QL80_.jpg",
                            CoverLarge = "https://shared.fastly.steamstatic.com/store_item_assets/steam/apps/39210/47a2e4f5387b9ac6ef19716df44127fccd746ca2/capsule_616x353.jpg?t=1738089746",
                            Description = "Un gioco mmo con una storia indimenticabile, battaglie esaltanti e tantissimi affascinanti scenari da esplorare.",
                            Price = 9.99m,
                            ReleaseDate = new DateOnly(2014, 2, 18),
                            Title = "Final Fantasy XIV"
                        });
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.WishList", b =>
                {
                    b.Property<Guid>("IdGame")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdGame", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationUserRole", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationRole", "Role")
                        .WithMany("ApplicationUserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", "User")
                        .WithMany("ApplicationUserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Cart", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("Carts")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", "ApplicationUser")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Comment", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("Comments")
                        .HasForeignKey("IdGame")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", "ApplicationUser")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.ExtraImage", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("ExtraImages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.GameCategory", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.Category", "Category")
                        .WithMany("GameCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("GameCategories")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Library", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("Library")
                        .HasForeignKey("IdGame")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", "ApplicationUser")
                        .WithMany("Library")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.VideoGame", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.Company", "Company")
                        .WithMany("VideoGames")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.WishList", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.VideoGames.VideoGame", "VideoGame")
                        .WithMany("WishList")
                        .HasForeignKey("IdGame")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", "ApplicationUser")
                        .WithMany("WishList")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CapStoneBackEnd.Models.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationRole", b =>
                {
                    b.Navigation("ApplicationUserRole");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.Auth.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserRole");

                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("Library");

                    b.Navigation("WishList");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Category", b =>
                {
                    b.Navigation("GameCategories");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.Company", b =>
                {
                    b.Navigation("VideoGames");
                });

            modelBuilder.Entity("CapStoneBackEnd.Models.VideoGames.VideoGame", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("ExtraImages");

                    b.Navigation("GameCategories");

                    b.Navigation("Library");

                    b.Navigation("WishList");
                });
#pragma warning restore 612, 618
        }
    }
}
